{
    attributes = (
        {
            className = "java.lang.Number"; 
            columnName = id; 
            externalType = INT; 
            name = id; 
            precision = 10; 
            valueType = l; 
        }, 
        {
            allowsNull = Y; 
            columnName = kundeSeit; 
            externalType = TIMESTAMP; 
            name = kundeseit; 
            valueClassName = NSCalendarDate; 
            valueType = T; 
        }, 
        {
            allowsNull = Y; 
            columnName = nachname; 
            externalType = VARCHAR; 
            name = nachname; 
            valueClassName = NSString; 
            valueType = S; 
            width = 45; 
        }, 
        {
            allowsNull = Y; 
            columnName = ort; 
            externalType = VARCHAR; 
            name = ort; 
            valueClassName = NSString; 
            valueType = S; 
            width = 45; 
        }, 
        {
            allowsNull = Y; 
            columnName = plz; 
            externalType = VARCHAR; 
            name = plz; 
            valueClassName = NSString; 
            valueType = S; 
            width = 45; 
        }, 
        {
            allowsNull = Y; 
            columnName = strasse; 
            externalType = VARCHAR; 
            name = strasse; 
            valueClassName = NSString; 
            valueType = S; 
            width = 45; 
        }, 
        {
            allowsNull = Y; 
            columnName = tel; 
            externalType = VARCHAR; 
            name = tel; 
            valueClassName = NSString; 
            valueType = S; 
            width = 45; 
        }, 
        {
            allowsNull = Y; 
            columnName = vorname; 
            externalType = VARCHAR; 
            name = vorname; 
            valueClassName = NSString; 
            valueType = S; 
            width = 45; 
        }
    ); 
    attributesUsedForLocking = (id, kundeseit, nachname, ort, plz, strasse, tel, vorname); 
    className = "ch.lars.your.app.eoerd.Kunde"; 
    classProperties = (bestellungs, kundeseit, nachname, ort, plz, strasse, tel, vorname); 
    externalName = kunde; 
    fetchSpecificationDictionary = {}; 
    name = Kunde; 
    primaryKeyAttributes = (id); 
    relationships = (
        {
            destination = Bestellung; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = kundeId; sourceAttribute = id; }); 
            name = bestellungs; 
        }
    ); 
}
